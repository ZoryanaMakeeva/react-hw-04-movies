{"version":3,"sources":["components/Cast/index.js"],"names":["Cast","match","useState","cast","setCast","useEffect","getCast","params","id","then","data","map","profile_path","name","character","key","Math","random","src","alt"],"mappings":"0KAqCeA,UAjCF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACFC,mBAAS,IADP,mBACnBC,EADmB,KACbC,EADa,KAO1B,OAJAC,qBAAU,WACRC,YAAQL,EAAMM,OAAOC,IAAIC,MAAK,SAACC,GAAD,OAAUN,EAAQM,QAC/C,CAACT,EAAMM,OAAOC,KAGf,4BACGL,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAvB,OACR,yBAAKC,IAAKH,EAAeI,KAAKC,UAC5B,yBACEC,IACEN,EAAY,wCACyBA,GACjC,GAENO,IAAI,KAEN,4BACE,2BAAIN,GACJ,yCAAeC","file":"static/js/cast.4e911bad.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getCast } from \"../../services/themoviedb\";\n\nconst Cast = ({ match }) => {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getCast(match.params.id).then((data) => setCast(data));\n  }, [match.params.id]);\n\n  return (\n    <ul>\n      {cast.map(({ profile_path, name, character }) => (\n        <div key={profile_path + Math.random()}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w92${profile_path}`\n                : \"\"\n            }\n            alt=\"\"\n          />\n          <li>\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        </div>\n      ))}\n    </ul>\n  );\n};\n\nCast.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n\nexport default Cast;\n"],"sourceRoot":""}