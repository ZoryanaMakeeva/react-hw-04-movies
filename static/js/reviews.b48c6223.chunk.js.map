{"version":3,"sources":["components/Reviews/index.js"],"names":["Reviews","match","useState","reviews","setReviews","useEffect","getReviews","params","id","then","data","length","map","author","content","key"],"mappings":"0KAwBeA,UArBC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACCC,mBAAS,IADV,mBACtBC,EADsB,KACbC,EADa,KAO7B,OAJAC,qBAAU,WACRC,YAAWL,EAAMM,OAAOC,IAAIC,MAAK,SAACC,GAAD,OAAUN,EAAWM,QACrD,CAACT,EAAMM,OAAOC,KAGf,4BACGL,EAAQQ,OACLR,EAAQS,KAAI,gBAAGJ,EAAH,EAAGA,GAAIK,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,wBAAIC,IAAKP,GACP,sCAAYK,GACZ,2BAAIC,OAGR","file":"static/js/reviews.b48c6223.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getReviews } from \"../../services/themoviedb\";\n\nconst Reviews = ({ match }) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getReviews(match.params.id).then((data) => setReviews(data));\n  }, [match.params.id]);\n\n  return (\n    <ul>\n      {reviews.length\n        ? reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))\n        : \"This film has no reviews\"}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"sourceRoot":""}